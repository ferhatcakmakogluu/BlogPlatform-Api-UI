// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240805114700_updatev2NewsTableToDefaultValues")]
    partial class updatev2NewsTableToDefaultValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NLayer.Core.Entities.Admins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Admin",
                            Name = "Admin",
                            Password = "root123",
                            Role = "ADMIN",
                            UserName = "root"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.Albume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumeDislike")
                        .HasColumnType("int");

                    b.Property<int?>("AlbumeLike")
                        .HasColumnType("int");

                    b.Property<string>("AlbumeName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Albumes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumeName = "Albume 1",
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3848)
                        },
                        new
                        {
                            Id = 2,
                            AlbumeName = "Albume 2",
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3858)
                        },
                        new
                        {
                            Id = 3,
                            AlbumeName = "Albume 3",
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3859)
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DislikeCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPinned")
                        .HasColumnType("bit");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int");

                    b.Property<int?>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3983),
                            Description = "Description 1",
                            DislikeCount = 0,
                            IsPinned = false,
                            LikeCount = 0,
                            ReadCount = 0,
                            Title = "News 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3984),
                            Description = "Description 2",
                            DislikeCount = 0,
                            IsPinned = false,
                            LikeCount = 0,
                            ReadCount = 0,
                            Title = "News 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3986),
                            Description = "Description 3",
                            DislikeCount = 0,
                            IsPinned = false,
                            LikeCount = 0,
                            ReadCount = 0,
                            Title = "News 3"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.NewsComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CommentedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CommentedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Comment 1",
                            CommentedBy = "User 1",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3918),
                            NewsId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Comment 2",
                            CommentedBy = "User 2",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3920),
                            NewsId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Comment 3",
                            CommentedBy = "User 3",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3921),
                            NewsId = 2
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Comment 4",
                            CommentedBy = "User 4",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(3922),
                            NewsId = 3
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.PictureComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CommentedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CommentedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PicturesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PicturesId");

                    b.ToTable("PictureComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Comment 1",
                            CommentedBy = "User 1",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(4042),
                            PicturesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Comment 2",
                            CommentedBy = "User 2",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(4044),
                            PicturesId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Comment 3",
                            CommentedBy = "User 3",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(4045),
                            PicturesId = 2
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Comment 4",
                            CommentedBy = "User 4",
                            CommentedDate = new DateTime(2024, 8, 5, 14, 46, 59, 959, DateTimeKind.Local).AddTicks(4046),
                            PicturesId = 3
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.Pictures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumeId")
                        .HasColumnType("int");

                    b.Property<int?>("PictureDislike")
                        .HasColumnType("int");

                    b.Property<int?>("PictureLike")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumeId");

                    b.ToTable("Pictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumeId = 1,
                            PictureUrl = "/Pictures/1"
                        },
                        new
                        {
                            Id = 2,
                            AlbumeId = 1,
                            PictureUrl = "/Pictures/2"
                        },
                        new
                        {
                            Id = 3,
                            AlbumeId = 2,
                            PictureUrl = "/Pictures/3"
                        },
                        new
                        {
                            Id = 4,
                            AlbumeId = 3,
                            PictureUrl = "/Pictures/4"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Entities.NewsComments", b =>
                {
                    b.HasOne("NLayer.Core.Entities.News", "News")
                        .WithMany("NewsComments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("NLayer.Core.Entities.PictureComments", b =>
                {
                    b.HasOne("NLayer.Core.Entities.Pictures", "Pictures")
                        .WithMany("PictureComments")
                        .HasForeignKey("PicturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("NLayer.Core.Entities.Pictures", b =>
                {
                    b.HasOne("NLayer.Core.Entities.Albume", "Albume")
                        .WithMany("Pictures")
                        .HasForeignKey("AlbumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albume");
                });

            modelBuilder.Entity("NLayer.Core.Entities.Albume", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("NLayer.Core.Entities.News", b =>
                {
                    b.Navigation("NewsComments");
                });

            modelBuilder.Entity("NLayer.Core.Entities.Pictures", b =>
                {
                    b.Navigation("PictureComments");
                });
#pragma warning restore 612, 618
        }
    }
}
